[1,["89cmTX6lZEpZv2LCyw2goK","efrF9/2nFLab9U4WtciRns@f9941","97SsV8PwpBxrCRFFYP3wFD","d0MqyYBeFAkIi762QNy1/B@b47c0","6fAc9/gb9Kfr1dCvwZaWSA@b47c0","061bmWiuBHVp8sy9xvMIOr"],["node","_cameraComponent","root","scene","_parent","_customMaterial","_spriteFrame","asset","_envmapHDR","_envmapLDR","_effectAsset"],[["cc.Node",["_name","_id","_layer","_objFlags","__editorExtras__","_components","_parent","_lpos","_lrot","_euler","_children","_prefab"],-2,9,1,5,5,5,2,4],["cc.Camera",["_clearFlags","_visibility","_projection","_priority","_orthoHeight","_far","node","_color"],-3,1,5],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name"],2],["cc.Node",["_name","_parent","_components","_lpos"],2,1,2,5],["cc.UITransform",["node","_contentSize"],3,1,5],["cc.Canvas",["node","_cameraComponent"],3,1,1],["cc.Widget",["_alignFlags","node"],2,1],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.PrefabInfo",["root","asset","fileId","instance","targetOverrides","nestedPrefabInstanceRoots"],-2,2],["cc.PrefabInfo",["fileId","targetOverrides","nestedPrefabInstanceRoots","root","instance","asset"],0,1,4,6],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree","skin","lightProbeInfo","postSettings"],3,4,4,4,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_skyColorLDR","_groundAlbedoLDR"],2,5,5,5],["cc.ShadowsInfo",["_shadowColor"],3,5],["cc.SkyboxInfo",["_enabled","_envmapHDR","_envmapLDR"],2,6,6],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.SkinInfo",[],3],["cc.LightProbeInfo",[],3],["cc.PostSettingsInfo",[],3],["cc.TargetInfo",["localID"],2],["cc.Sprite",["_sizeMode","node","_customMaterial","_spriteFrame"],2,1,6,6],["cc.PrefabInstance",["fileId","prefabRootNode","propertyOverrides"],1,9],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["cc.DirectionalLight",["node","_color","_staticSettings"],3,1,5,4],["cc.StaticLightSettings",[],3],["cc.Material",["_name","_props","_states","_defines"],-1]],[[24,0,1,2,2],[5,0,1,1],[2,0,1,2,4],[3,0,2],[0,0,2,1,10,5,7,4],[0,0,2,6,5,3],[0,3,4,6,11,3],[0,0,1,6,5,8,9,3],[0,0,1,6,5,7,8,9,3],[4,0,1,2,3,2],[6,0,1,1],[7,0,1,2],[8,0,1,2,3,2],[9,0,1,2,3,4,5,6],[10,0,1,2,3,4,5,4],[11,0,1,2,3,4,5,6,7,1],[12,0,1,2,3,2],[13,0,1],[14,0,1,2,2],[15,1],[16,1],[17,1],[18,1],[19,1],[20,0,2],[21,0,1,2,3,2],[22,0,1,2,3],[23,0,1,2,3],[25,0,1,2,1],[26,1],[1,0,1,6,3],[1,2,3,4,5,0,1,6,7,7],[27,0,1,2,3,5]],[[[[2,"../Loop/Loop",[{"hash":2510263426,"name":"../Loop/Loop|unlit-vs:vert|unlit-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"FARGS","stageFlags":16,"binding":1,"members":[{"name":"C","type":14,"count":1},{"name":"N","type":5,"count":1},{"name":"R","type":13,"count":1},{"name":"Rm","type":13,"count":1},{"name":"scale","type":13,"count":1},{"name":"angle","type":13,"count":1},{"name":"speed","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"FARGS","stageFlags":16,"binding":1,"members":[{"name":"C","type":14,"count":1},{"name":"N","type":5,"count":1},{"name":"R","type":13,"count":1},{"name":"Rm","type":13,"count":1},{"name":"scale","type":13,"count":1},{"name":"angle","type":13,"count":1},{"name":"speed","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 v_uv0;\nvec4 vert() {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  v_uv0 = a_texCoord;\n  color = a_color;\n  v_uv0.y = 1.0 - v_uv0.y;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec2 v_uv0;\nuniform sampler2D mainTexture;\nlayout(std140) uniform FARGS {\n  vec2 C;\n  int N;\n  float R;\n  float Rm;\n  float scale;\n  float angle;\n  float speed;\n};\nfloat Polygon(vec2 uv, int n, float r, float blur) {\n  float a = atan(uv.x, uv.y) + 3.141592653589793;\n  float rad = 2.0 * 3.141592653589793 / float(n);\n  float d = cos(floor(0.5 + a / rad) * rad - a) * length(uv);\n  return smoothstep(0.0, blur, d - r);\n}\nvec4 PolygonColor(vec2 uv, int n, float r, float blur) {\n  float a = atan(uv.x, uv.y) + 3.141592653589793;\n  float rad = 2.0 * 3.141592653589793 / float(n);\n  float d = cos(floor(0.5 + a / rad) * rad - a) * length(uv);\n  vec3 color = vec3(0.2, 1.0, 0.4);\n  color *= smoothstep(r - 0.01, r, d) * smoothstep(r + 0.01, r, d);\n  color += vec3(0.2, 0.0, 0.4) * smoothstep(r + 0.02 + blur, r + 0.02, d) * step(0.0, d - r - 0.02);\n  float pct = smoothstep(0.0, 0.01, abs(abs(uv.x) - abs(uv.y)));\n  color = mix(vec3(0.2, 1.0, 0.4), color, pct);\n  return vec4(color, 1.0);\n}\nmat2 R2(float angle) {\n  float c = cos(angle);\n  float s = sin(angle);\n  return mat2(c, - s, s, c);\n}\nvec2 ComplexPow(vec2 z, vec2 c) {\n  float zmod = sqrt(dot(z, z));\n  float t = atan(z.y, z.x);\n  float part1 = pow(zmod, c.x) * pow(2.718281828459045, - c.y*t);\n  float exp2 = log(zmod) * c.y;\n  vec2 part2 = vec2(cos(exp2), sin(exp2));\n  float exp3 = c.x * t;\n  vec2 part3 = vec2(cos(exp3), sin(exp3));\n  vec2 part2x3 = vec2(\n    part2.x * part3.x - part2.y * part3.y,\n  part2.x * part3.y + part2.y * part3.x);\n  return part1 * part2x3;\n}\nvec4 frag() {\n  vec2 uv = v_uv0.xy * 2.0 - 1.0;\n  vec2 uvBase = v_uv0.xy * 2.0 - 1.0;\n  uv *= 0.5;\n  float zoom = pow(scale, fract(cc_time.x * speed));\n  uv /= zoom;\n  float loop = floor(cc_time.x * speed);\n  uv = R2(angle * loop) * uv;\n  vec2 origin = vec2(0.0);\n  float blur = 0.01;\n  mat2 matR2 = R2(angle);\n  vec2 spiralUV = ComplexPow(uv, C);\n  vec4 o = PolygonColor(spiralUV, N, R, 0.3);\n  for(int i = 0; i < 20; ++ i) {\n    uv = matR2 * uv * scale;\n    spiralUV = ComplexPow(uv, C);\n    float mask = Polygon(spiralUV, N, Rm, blur);\n    vec4 color = PolygonColor(spiralUV, N, R, 0.3);\n    o = mix(color, o, mask);\n  }\n  uv = v_uv0.xy * 2.0 - 1.0;\n  o.a *= Polygon(uv, N, 0.15, 0.2);\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 v_uv0;\nvec4 vert() {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  v_uv0 = a_texCoord;\n  color = a_color;\n  v_uv0.y = 1.0 - v_uv0.y;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform highp vec4 cc_time;\nvarying vec2 v_uv0;\nuniform sampler2D mainTexture;\n  uniform vec2 C;\n  uniform int N;\n  uniform float R;\n  uniform float Rm;\n  uniform float scale;\n  uniform float angle;\n  uniform float speed;\nfloat Polygon(vec2 uv, int n, float r, float blur) {\n  float a = atan(uv.x, uv.y) + 3.141592653589793;\n  float rad = 2.0 * 3.141592653589793 / float(n);\n  float d = cos(floor(0.5 + a / rad) * rad - a) * length(uv);\n  return smoothstep(0.0, blur, d - r);\n}\nvec4 PolygonColor(vec2 uv, int n, float r, float blur) {\n  float a = atan(uv.x, uv.y) + 3.141592653589793;\n  float rad = 2.0 * 3.141592653589793 / float(n);\n  float d = cos(floor(0.5 + a / rad) * rad - a) * length(uv);\n  vec3 color = vec3(0.2, 1.0, 0.4);\n  color *= smoothstep(r - 0.01, r, d) * smoothstep(r + 0.01, r, d);\n  color += vec3(0.2, 0.0, 0.4) * smoothstep(r + 0.02 + blur, r + 0.02, d) * step(0.0, d - r - 0.02);\n  float pct = smoothstep(0.0, 0.01, abs(abs(uv.x) - abs(uv.y)));\n  color = mix(vec3(0.2, 1.0, 0.4), color, pct);\n  return vec4(color, 1.0);\n}\nmat2 R2(float angle) {\n  float c = cos(angle);\n  float s = sin(angle);\n  return mat2(c, - s, s, c);\n}\nvec2 ComplexPow(vec2 z, vec2 c) {\n  float zmod = sqrt(dot(z, z));\n  float t = atan(z.y, z.x);\n  float part1 = pow(zmod, c.x) * pow(2.718281828459045, - c.y*t);\n  float exp2 = log(zmod) * c.y;\n  vec2 part2 = vec2(cos(exp2), sin(exp2));\n  float exp3 = c.x * t;\n  vec2 part3 = vec2(cos(exp3), sin(exp3));\n  vec2 part2x3 = vec2(\n    part2.x * part3.x - part2.y * part3.y,\n  part2.x * part3.y + part2.y * part3.x);\n  return part1 * part2x3;\n}\nvec4 frag() {\n  vec2 uv = v_uv0.xy * 2.0 - 1.0;\n  vec2 uvBase = v_uv0.xy * 2.0 - 1.0;\n  uv *= 0.5;\n  float zoom = pow(scale, fract(cc_time.x * speed));\n  uv /= zoom;\n  float loop = floor(cc_time.x * speed);\n  uv = R2(angle * loop) * uv;\n  vec2 origin = vec2(0.0);\n  float blur = 0.01;\n  mat2 matR2 = R2(angle);\n  vec2 spiralUV = ComplexPow(uv, C);\n  vec4 o = PolygonColor(spiralUV, N, R, 0.3);\n  for(int i = 0; i < 20; ++ i) {\n    uv = matR2 * uv * scale;\n    spiralUV = ComplexPow(uv, C);\n    float mask = Polygon(spiralUV, N, Rm, blur);\n    vec4 color = PolygonColor(spiralUV, N, R, 0.3);\n    o = mix(color, o, mask);\n  }\n  uv = v_uv0.xy * 2.0 - 1.0;\n  o.a *= Polygon(uv, N, 0.15, 0.2);\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":50}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"}]}],[{"name":"opaque","passes":[{"program":"../Loop/Loop|unlit-vs:vert|unlit-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"properties":{"mainTexture":{"value":"white","type":28},"N":{"type":5,"value":[6],"inspector":{"displayName":"多边形边数"}},"C":{"type":14,"value":[1,0],"inspector":{"displayName":"指数"}},"R":{"type":13,"value":[0.9],"inspector":{"displayName":"内接圆半径"}},"Rm":{"type":13,"value":[0.7],"inspector":{"displayName":"遮罩内接圆半径"}},"scale":{"type":13,"value":[2.5],"inspector":{"displayName":"同心圆缩小系数"}},"angle":{"type":13,"value":[0.13659],"inspector":{"displayName":"同心圆旋转角(radius)"}},"speed":{"type":13,"value":[1],"inspector":{"displayName":"动画速度"}}}}]}]]],0,0,[],[],[]],[[[3,"Loop"],[4,"Canvas",33554432,"3e3ZVz5FJNALEiaEZKMt9j",[-5,-6,-7],[[1,-1,[5,1280,720]],[10,-3,-2],[11,45,-4]],[1,640,360,0]],[12,"Loop",[-9,-10,1],[13,null,null,"5fff0453-6a84-4cce-8080-3231dbe6ee93",null,null,[-8]],[15,[16,0.8,[2,0.2,0.5,0.8,0.520833125],[2,0.452588,0.607642,0.755699,0],[2,0.618555,0.577848,0.544564,0]],[17,[4,4283190348]],[18,true,3,4],[19],[20],[21],[22],[23]]],[24,["6cB8/Ws3NFD482Eb93xCOP"]],[5,"Sprite",33554432,1,[[1,-11,[5,960,640]],[25,0,-12,0,1]]],[6,0,{},1,[14,"6cB8/Ws3NFD482Eb93xCOP",null,null,-13,[26,"75nAZCTIdIPJ7XFCprPaaL",null,[[27,"Button",["_name"],3],[0,["_lpos"],3,[1,-568.271,303.078,0]],[0,["_lrot"],3,[3,0,0,0,1]],[0,["_euler"],3,[1,0,0,0]]]],2]],[7,"Main Light","c0y6F5f+pAvI805TdmxIjx",2,[[28,-14,[4,4293982975],[29]]],[3,-0.06397656665577071,-0.44608233363525845,-0.8239028751062036,-0.3436591377065261],[1,-117.894,-194.909,38.562]],[8,"Main Camera","c9DMICJLFO5IeO07EPon7U",2,[[30,14,1822425087,-15]],[1,-10,10,10],[3,1.0621598943857663e-17,-0.3826834323650898,-2.564280822434891e-17,0.9238795325112867],[1,0,-45,-3.1805546814635168e-15]],[9,"Camera",1,[-16],[1,0,0,1000]],[31,0,1073741824,360,2000,6,41943040,8,[4,4278190080]]],0,[0,0,1,0,1,9,0,0,1,0,0,1,0,-1,8,0,-2,4,0,-3,5,0,-1,5,0,-1,6,0,-2,7,0,0,4,0,0,4,0,2,5,0,0,6,0,0,7,0,-1,9,0,3,2,1,4,2,16],[0,0,0,0,0],[5,6,7,8,9],[0,1,2,3,4]],[[[32,"Loop",[{"N":4,"R":0.4,"Rm":0.6,"scale":1.6,"angle":0}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}]]],0,0,[0],[10],[5]]]]
